<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="SDMenuMapper">
 <cache type="org.mybatis.caches.ehcache.LoggingEhcache"/>

	<resultMap type="SDMenu" id="menuResultMap">
		<id column="MENU_ID" property="MENU_ID" />
		<result column="MENU_PID" property="MENU_PID" />
		<result column="MENU_NAME" property="MENU_NAME" />
		<result column="MENU_URL" property="MENU_URL" />
		<result column="MENU_ICON" property="MENU_ICON" />
		<result column="SORT_DATE" property="SORT_DATE" />
		<result column="CREATE_DATE" property="CREATE_DATE" />
		<result column="ISENABLED" property="ISENABLED" />
		<result column="write_read" property="write_read" />
	</resultMap>


	<select id="checkMenuRight" parameterType="pd" resultMap="menuResultMap" useCache="false">
		select
		m.MENU_ID,
		m.MENU_ID,
		m.MENU_PID,
		m.MENU_NAME,
		m.MENU_URL,
		m.MENU_ICON,
		m.ISENABLED,
		a.write_read,
		m.show_house_type
		from s_d_menu m
		LEFT JOIN s_d_rights c
		on m.MENU_ID = c.obj_id
		LEFT JOIN s_d_role_rights a
		on c.rights_id = a.rights_id
		LEFT JOIN s_d_user_role b
		on a.role_id = b.role_id
		where c.obj_type = 1
		and m.MENU_PID=0
		and m.ISENABLED = '1'
		and a.write_read != -1
		<if test="userId != null">
			AND b.user_id = #{userId}
		</if>
		<if test="menuId != null">
			AND m.menu_id = #{menuId}
		</if>
		order by m.SORT_DATE

	</select>

	<select id="listAllParentMenu" parameterType="pd" resultMap="menuResultMap">
		select 
			m.MENU_ID,
			m.MENU_ID,
			m.MENU_PID,
			m.MENU_NAME,
			m.MENU_URL,
			m.MENU_ICON,
			m.ISENABLED,
			a.write_read,
			m.show_house_type
		from s_d_menu m
		LEFT JOIN s_d_rights c
		on m.MENU_ID = c.obj_id
		LEFT JOIN s_d_role_rights a
		on c.rights_id = a.rights_id
		LEFT JOIN s_d_user_role b
		on a.role_id = b.role_id
		where c.obj_type = 1
		and m.MENU_PID=0
		and m.ISENABLED = '1'
		and a.write_read != -1
		<if test="user_id != null">
			AND b.user_id = #{user_id}
		</if>
		order by m.SORT_DATE
	
		<!-- SELECT
		s_d_menu.MENU_ID,
		s_d_menu.MENU_PID,
		s_d_menu.MENU_NAME,
		s_d_menu.MENU_URL,
		s_d_menu.MENU_ICON,
		s_d_menu.ISENABLED
		FROM
		s_d_menu
		WHERE s_d_menu.MENU_PID=0
	    and s_d_menu.ISENABLED = '1'
		order by MENU_ID -->
	</select>

	<select id="listSubMenuByParentId" parameterType="pd" resultMap="menuResultMap">
		select 
			m.MENU_ID,
			m.MENU_ID,
			m.MENU_PID,
			m.MENU_NAME,
			m.MENU_URL,
			m.MENU_ICON,
			m.ISENABLED,
			a.write_read,
			m.show_house_type
		from s_d_menu m
		LEFT JOIN s_d_rights c
		on m.MENU_ID = c.obj_id
		LEFT JOIN s_d_role_rights a
		on c.rights_id = a.rights_id
		LEFT JOIN s_d_user_role b
		on a.role_id = b.role_id
		where c.obj_type = 1
		and m.ISENABLED = '1'
		and a.write_read != -1
		<if test="user_id != null">
			AND b.user_id = #{user_id}
		</if>
		<if test="MENU_PID != null">
			AND m.MENU_PID = #{MENU_PID}
		</if>
		order by m.SORT_DATE
	
	
	
		<!-- SELECT
		s_d_menu.MENU_ID,
		s_d_menu.MENU_PID,
		s_d_menu.MENU_NAME,
		s_d_menu.MENU_URL,
		s_d_menu.MENU_ICON,
		s_d_menu.ISENABLED
		FROM
		s_d_menu
		WHERE s_d_menu.MENU_PID= #{MENU_PID}
		and s_d_menu.ISENABLED = '1'
		order by MENU_ID -->
	</select>
	<!-- 查询菜单list -->
	<select id="selectMenuList" parameterType="pd" resultType="pd" useCache="false">
		select
		m.menu_id 
		,m.menu_pid
		,m.menu_name
		,m.menu_url
		,m.menu_icon
		,m.sort_date
		,m.create_date
		,m.isenabled
		,m.show_house_type
		,u.menu_name menu_pname
		from s_d_menu m
		left join
		(select
		menu_id 
		,menu_pid
		,menu_name
		,menu_url
		,menu_icon
		,sort_date
		,create_date
		,isenabled
		,show_house_type
		from s_d_menu
		where 1 = 1
		and isenabled = 1
		and menu_pid = 0) u
		on m.menu_pid = u.menu_id
		where 1 = 1
		and m.isenabled = 1
		<if test="menu_pid != null and menu_pid != ''">
			and m.menu_pid = #{menu_pid} 
		</if>
		<if test="menu_name != null and menu_name != ''">
			and (m.menu_name LIKE CONCAT(CONCAT('%', #{menu_name}),'%') or m.menu_id LIKE CONCAT(CONCAT('%', #{menu_name}),'%') )
		</if>
		order by m.sort_date
	</select>
	
	<!-- 查询主菜单list -->
	<select id="selectParentMenuList" parameterType="pd" resultType="pd" useCache="false">
		select
		menu_id 
		,menu_pid
		,menu_name
		,menu_url
		,menu_icon
		,sort_date
		,create_date
		,isenabled
		,show_house_type
		from s_d_menu
		where 1 = 1
		and isenabled = 1
		and menu_pid = 0
		order by sort_date
	</select>
	
	<!-- 新增菜单 -->
	<insert id="saveMenu" parameterType="pd"  flushCache="false">
		insert into s_d_menu (
			menu_id,
			menu_pid,
			menu_name,
			menu_url,
			menu_icon,
			sort_date,
			create_date,
			show_house_type,
			isenabled
		) values (
			#{menu_id},
			#{menu_pid},
			#{menu_name},
			#{menu_url},
			#{menu_icon},
			CURDATE(),
			CURDATE(),
			#{show_house_type},
			1
		)
	</insert>
	
	<!-- 修改菜单信息 -->
	<update id="editMenu" parameterType="pd" flushCache="false">
		update  s_d_menu
			set menu_name = #{menu_name},
				menu_url = #{menu_url},
				menu_icon = #{menu_icon},
				show_house_type = #{show_house_type},
				sort_date = CURDATE()
			where 
				menu_id = #{menu_id}
	</update>
	
	<!-- 删除菜单信息 -->
	<delete id="delMenu" parameterType="pd" flushCache="false">
		update  s_d_menu
			set isenabled = 0,
				sort_date = CURDATE()
			where 
				menu_id = #{menu_id}
	</delete>
	
	<!-- 保存角色权限表 -->
	<insert id="saveRoleRights" parameterType="pd"  flushCache="false">
		insert into s_d_role_rights (
			role_id,
			rights_id,
			write_read,
			create_person,
			create_date,
			create_time,
			modify_person,
			modify_date,
			modify_time
		) values (
			#{role_id},
			#{rights_id},
			2,
			#{user_id},
			CURDATE(),
			CURDATE(),
			#{user_id},
			CURDATE(),
			CURDATE()
		)
	</insert>
	
	<!-- 保存角色模版权限表 -->
	<insert id="saveRoleTempRights" parameterType="pd"  flushCache="false">
		insert into s_d_role_temp_rights (
			role_temp_id,
			role_temp_name,
			rights_id,
			write_read,
			create_person,
			create_date,
			create_time,
			modify_person,
			modify_date,
			modify_time
		) values (
			#{role_temp_id},
			#{role_temp_name},
			#{rights_id},
			-1,
			#{user_id},
			CURDATE(),
			CURDATE(),
			#{user_id},
			CURDATE(),
			CURDATE()
		)
	</insert>
	
	<!-- 保存权限表 -->
	<insert id="saveRights" parameterType="pd"  flushCache="false">
		insert into s_d_rights (
			rights_id,
			obj_id,
			obj_type,
			create_person,
			create_date,
			create_time,
			modify_person,
			modify_date,
			modify_time
		) values (
			#{rights_id},
			#{obj_id},
			1,
			#{user_id},
			CURDATE(),
			CURDATE(),
			#{user_id},
			CURDATE(),
			CURDATE()
		)
	</insert>
	
	<!-- 查询role -->
	<select id="selectRoleList" parameterType="pd" resultType="pd" useCache="false">
		select
		r.role_id 
		,r.role_name
		from s_d_role r
		left join
		s_d_user_role s
		on s.role_id = r.role_id
		left join 
		s_d_user u
		on u.id = s.user_id
		where 1=1
		and u.id = #{user_id}
	</select>
	
	<!-- 查询role_temp -->
	<select id="selectRoleTempList" parameterType="pd" resultType="pd" useCache="false">
		select
		r.role_temp_id 
		,r.role_temp_name
		from s_d_role_temp r
	</select>
	
</mapper>