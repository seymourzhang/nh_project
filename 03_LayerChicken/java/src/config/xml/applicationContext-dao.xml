<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd 
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task.xsd">
	
	<!-- 启动组件扫描，排除@Controller组件，该组件由SpringMVC配置文件扫描 -->
	<context:component-scan base-package="com.mtc">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>	 
	
	<!-- 加载db.properties文件中的内容，db.properties文件中key命名要有一定的特殊规则 -->
	<!-- <context:property-placeholder location="classpath:config/pro/db_sqlserver.properties" /> -->
	<context:property-placeholder location="classpath:config/pro/db_mysql.properties" />
	
	<!-- 配置数据源 ，dbcp -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="minIdle" value="${jdbc.minIdle}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="maxTotal" value="${jdbc.maxTotal}" />
		<property name="maxWaitMillis" value="${jdbc.maxWaitMillis}" />
	</bean>
	
	<!-- sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 加载mybatis的全局配置文件 -->
		<property name="configLocation" value="classpath:config/xml/SqlMapConfig.xml" />
	</bean>
	
	<!-- 扫描包路径，如果需要扫描多个包，中间使用半角逗号隔开 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.mtc.mapper"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
	</bean>
	
	<!-- 事务配置 start-->
	<bean id="transactionManager"    
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">    
        <property name="dataSource" ref="dataSource" />    
	</bean>
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
            <tx:method name="*" propagation="REQUIRED" />
        </tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="txPointcut1" expression="execution(* com.mtc.biz.*.*Manager.*(..))"/>
		<aop:pointcut id="txPointcut2" expression="execution(* com.mtc.app.biz.*Manager.*(..))"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut1" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut2" />
	</aop:config>
	<!-- 事务配置 end-->
	
	<!-- 线程执行器配置，用于任务注册 -->
	<bean id="executor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
	 <property name="corePoolSize" value="10" />
	 <property name="maxPoolSize" value="100" />
	 <property name="queueCapacity" value="500" />
	</bean>
	
	<!-- 任务1处理类 GateWayTask -->
	<bean id="GateWayTask" class="com.mtc.scheduler.GatewayExecuteJob" />
	<bean id="jobDetail1" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	 <property name="targetObject" ref="GateWayTask" />
	 <property name="targetMethod" value="Service" />
	</bean>
	<bean id="cronTrigger1" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		 <property name="jobDetail" ref="jobDetail1" />
		 <property name="cronExpression" value="10 0/1 * * * ?" />
	</bean>
	
	<!-- 任务2处理类 AlarmDealTask-->
	<bean id="AlarmDealTask" class="com.mtc.scheduler.AlarmDealExecuteJob" />
	<bean id="jobDetail2" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	 <property name="targetObject" ref="AlarmDealTask" />
	 <property name="targetMethod" value="Service" />
	</bean>
	<bean id="cronTrigger2" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		 <property name="jobDetail" ref="jobDetail2" />
		 <property name="cronExpression" value="10 0/1 * * * ?" />
	</bean>
	
	<!-- 任务3处理类  JPushDealTask-->
	<bean id="JPushDealTask" class="com.mtc.scheduler.JPushDealExecuteJob" />
	<bean id="jobDetail3" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	 <property name="targetObject" ref="JPushDealTask" />
	 <property name="targetMethod" value="Service" />
	</bean>
	<bean id="cronTrigger3" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		 <property name="jobDetail" ref="jobDetail3" />
		 <property name="cronExpression" value="10 0/1 * * * ?" />
	</bean>
	
	<!-- 任务4处理类  remindInfoFiltrateExecuteJob-->
	<bean id="remindInfoFiltrateExecuteJob" class="com.mtc.scheduler.RemindInfoFiltrateExecuteJob" />
	<bean id="jobDetail4" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	 <property name="targetObject" ref="remindInfoFiltrateExecuteJob" />
	 <property name="targetMethod" value="doGetRemindAlarms" />
	</bean>
	<bean id="cronTrigger4" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		 <property name="jobDetail" ref="jobDetail4" />
		 <property name="cronExpression" value="30 0/1 * * * ?" />
	</bean>
	
	<!-- 任务5处理类  callAlarmerExecuteJob -->
	<bean id="callAlarmerExecuteJob" class="com.mtc.scheduler.CallAlarmerExecuteJob" />
	<bean id="jobDetail5" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	 <property name="targetObject" ref="callAlarmerExecuteJob" />
	 <property name="targetMethod" value="doCallAlarmers" />
	</bean>
	<bean id="cronTrigger5" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		 <property name="jobDetail" ref="jobDetail5" />
		 <property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>
	
	<!-- 任务6处理类  TransYINCommDataTask -->
	<bean id="TransYINCommDataTask" class="com.mtc.scheduler.TransYINCommDataJob" />
	<bean id="jobDetail6" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
	 <property name="targetObject" ref="TransYINCommDataTask" />
	 <property name="targetMethod" value="Service" />
	</bean>
	<bean id="cronTrigger6" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		 <property name="jobDetail" ref="jobDetail6" />
		 <property name="cronExpression" value="20 0/1 * * * ?" />
	</bean>

	<!-- 任务7处理类  WirelessDataDealTask -->
	<bean id="WirelessDataDealTask" class="com.mtc.scheduler.WirelessDataDealExecuteJob" />
	<bean id="jobDetail7" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="WirelessDataDealTask" />
		<property name="targetMethod" value="Service" />
	</bean>
	<bean id="cronTrigger7" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="jobDetail7" />
		<property name="cronExpression" value="0 0/1 * * * ?" />
	</bean>

	<!-- 任务8处理类  DayMonitorDataJob -->
	<bean id="DayMonitorDataTask" class="com.mtc.scheduler.DayMonitorDataJob" />
	<bean id="jobDetail8" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="DayMonitorDataTask" />
		<property name="targetMethod" value="Service" />
	</bean>
	<bean id="cronTrigger8" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="jobDetail8" />
		<property name="cronExpression" value="0 0 * * * ?" />
	</bean>
	
	<!-- 任务开始 -->
	<!--  -->
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
	 <property name="triggers">
	  <list>
	    <ref bean="cronTrigger2" />
		<ref bean="cronTrigger7" />
		<ref bean="cronTrigger8" />
	  </list>
	 </property>
	 <property name="taskExecutor" ref="executor" />
	</bean> 
</beans>