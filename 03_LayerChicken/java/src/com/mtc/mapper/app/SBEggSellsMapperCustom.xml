<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mtc.mapper.app.SBEggSellsMapperCustom" >
  <resultMap id="BaseResultMap" type="com.mtc.entity.app.SBEggSells" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="farm_id" jdbcType="INTEGER" property="farmId" />
    <id column="sell_date" jdbcType="DATE" property="sellDate" />
    <result column="is_history" jdbcType="VARCHAR" property="isHistory" />
    <result column="day_age" jdbcType="INTEGER" property="dayAge" />
    <result column="week_age" jdbcType="INTEGER" property="weekAge" />
    <result column="farm_breed_id" jdbcType="INTEGER" property="farmBreedId" />
    <result column="good_box_size" jdbcType="DECIMAL" property="goodBoxSize" />
    <result column="good_price_type" jdbcType="VARCHAR" property="goodPriceType" />
    <result column="good_price_value" jdbcType="DECIMAL" property="goodPriceValue" />
    <result column="good_salebox_num" jdbcType="DECIMAL" property="goodSaleboxNum" />
    <result column="good_sale_weight" jdbcType="DECIMAL" property="goodSaleWeight" />
    <result column="good_sale_money" jdbcType="DECIMAL" property="goodSaleMoney" />
    <result column="broken_box_size" jdbcType="DECIMAL" property="brokenBoxSize" />
    <result column="broken_price_type" jdbcType="VARCHAR" property="brokenPriceType" />
    <result column="broken_price_value" jdbcType="DECIMAL" property="brokenPriceValue" />
    <result column="broken_salebox_num" jdbcType="DECIMAL" property="brokenSaleboxNum" />
    <result column="broken_sale_weight" jdbcType="DECIMAL" property="brokenSaleWeight" />
    <result column="broken_sale_money" jdbcType="DECIMAL" property="brokenSaleMoney" />
    <result column="chicken_manure" jdbcType="DECIMAL" property="chickenManure" />
    <result column="int_bak1" jdbcType="INTEGER" property="intBak1" />
    <result column="int_bak2" jdbcType="INTEGER" property="intBak2" />
    <result column="int_bak3" jdbcType="INTEGER" property="intBak3" />
    <result column="num_bak1" jdbcType="DECIMAL" property="numBak1" />
    <result column="num_bak2" jdbcType="DECIMAL" property="numBak2" />
    <result column="num_bak3" jdbcType="DECIMAL" property="numBak3" />
    <result column="var_bak1" jdbcType="VARCHAR" property="varBak1" />
    <result column="var_bak2" jdbcType="VARCHAR" property="varBak2" />
    <result column="var_bak3" jdbcType="VARCHAR" property="varBak3" />
    <result column="date_bak1" jdbcType="TIMESTAMP" property="dateBak1" />
    <result column="date_bak2" jdbcType="TIMESTAMP" property="dateBak2" />
    <result column="date_bak3" jdbcType="TIMESTAMP" property="dateBak3" />
    <result column="create_person" jdbcType="INTEGER" property="createPerson" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_person" jdbcType="INTEGER" property="modifyPerson" />
    <result column="modify_date" jdbcType="TIMESTAMP" property="modifyDate" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <select id="selectEggSellsByMonth" resultMap="BaseResultMap" >
    select farm_id, sell_date, is_history, day_age, week_age, farm_breed_id, good_box_size, 
    good_price_type, good_price_value, good_salebox_num, good_sale_weight, good_sale_money, 
    broken_box_size, broken_price_type, broken_price_value, broken_salebox_num, broken_sale_weight, 
    broken_sale_money, chicken_manure, int_bak1, int_bak2, int_bak3, num_bak1, num_bak2, 
    num_bak3, var_bak1, var_bak2, var_bak3, date_bak1, date_bak2, date_bak3, create_person, 
    create_date, create_time, modify_person, modify_date, modify_time
    from s_b_egg_sells where farm_id = #{farmId,jdbcType=INTEGER}
    and farm_breed_id = #{farmBreedId,jdbcType=INTEGER}
      and sell_date &gt;= #{beginDate,jdbcType=DATE}
      and sell_date &lt; #{endDate,jdbcType=DATE} order by sell_date
  </select>
  
  <update id="updateSellInfoByDate" parameterType="com.mtc.entity.app.SBEggSells">
    update s_b_egg_sells
    set
      good_box_size = #{goodBoxSize,jdbcType=DECIMAL},
      good_price_type = #{goodPriceType,jdbcType=VARCHAR},
      good_price_value = #{goodPriceValue,jdbcType=DECIMAL},
      good_salebox_num = #{goodSaleboxNum,jdbcType=DECIMAL},
      good_sale_weight = #{goodSaleWeight,jdbcType=DECIMAL},
      good_sale_money = #{goodSaleMoney,jdbcType=DECIMAL},
      broken_box_size = #{brokenBoxSize,jdbcType=DECIMAL},
      broken_price_type = #{brokenPriceType,jdbcType=VARCHAR},
      broken_price_value = #{brokenPriceValue,jdbcType=DECIMAL},
      broken_salebox_num = #{brokenSaleboxNum,jdbcType=DECIMAL},
      broken_sale_weight = #{brokenSaleWeight,jdbcType=DECIMAL},
      broken_sale_money = #{brokenSaleMoney,jdbcType=DECIMAL},
      chicken_manure = #{chickenManure,jdbcType=DECIMAL},
      modify_person = #{modifyPerson,jdbcType=INTEGER},
      modify_date = #{modifyDate,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
      where farm_id = #{farmId,jdbcType=INTEGER}
      and sell_date = #{sellDate,jdbcType=DATE}
      and farm_breed_id = #{farmBreedId,jdbcType=INTEGER}
  </update>
  
  <insert id="insertBatch" parameterType="com.mtc.entity.app.SBEggSells" >
    insert into s_b_egg_sells (farm_id, sell_date, is_history, 
      day_age, week_age, farm_breed_id, 
      good_box_size, good_price_type, good_price_value, 
      good_salebox_num, good_sale_weight, good_sale_money, 
      broken_box_size, broken_price_type, broken_price_value, 
      broken_salebox_num, broken_sale_weight, broken_sale_money, 
      chicken_manure, int_bak1, int_bak2, 
      int_bak3, num_bak1, num_bak2, 
      num_bak3, var_bak1, var_bak2, 
      var_bak3, date_bak1, date_bak2, 
      date_bak3, create_person, create_date, 
      create_time, modify_person, modify_date, 
      modify_time)
    values 
     <foreach collection="list" item="item" index="index" separator=",">
        (#{item.farmId,jdbcType=INTEGER}, #{item.sellDate,jdbcType=DATE}, #{item.isHistory,jdbcType=VARCHAR}, 
      #{item.dayAge,jdbcType=INTEGER}, #{item.weekAge,jdbcType=INTEGER}, #{item.farmBreedId,jdbcType=INTEGER}, 
      #{item.goodBoxSize,jdbcType=DECIMAL}, #{item.goodPriceType,jdbcType=VARCHAR}, #{item.goodPriceValue,jdbcType=DECIMAL}, 
      #{item.goodSaleboxNum,jdbcType=DECIMAL}, #{item.goodSaleWeight,jdbcType=DECIMAL}, #{item.goodSaleMoney,jdbcType=DECIMAL}, 
      #{item.brokenBoxSize,jdbcType=DECIMAL}, #{item.brokenPriceType,jdbcType=VARCHAR}, #{item.brokenPriceValue,jdbcType=DECIMAL}, 
      #{item.brokenSaleboxNum,jdbcType=DECIMAL}, #{item.brokenSaleWeight,jdbcType=DECIMAL}, #{item.brokenSaleMoney,jdbcType=DECIMAL}, 
      #{item.chickenManure,jdbcType=DECIMAL}, #{item.intBak1,jdbcType=INTEGER}, #{item.intBak2,jdbcType=INTEGER}, 
      #{item.intBak3,jdbcType=INTEGER}, #{item.numBak1,jdbcType=DECIMAL}, #{item.numBak2,jdbcType=DECIMAL}, 
      #{item.numBak3,jdbcType=DECIMAL}, #{item.varBak1,jdbcType=VARCHAR}, #{item.varBak2,jdbcType=VARCHAR}, 
      #{item.varBak3,jdbcType=VARCHAR}, #{item.dateBak1,jdbcType=TIMESTAMP}, #{item.dateBak2,jdbcType=TIMESTAMP}, 
      #{item.dateBak3,jdbcType=TIMESTAMP}, #{item.createPerson,jdbcType=INTEGER}, #{item.createDate,jdbcType=TIMESTAMP}, 
      #{item.createTime,jdbcType=TIMESTAMP}, #{item.modifyPerson,jdbcType=INTEGER}, #{item.modifyDate,jdbcType=TIMESTAMP}, 
      #{item.modifyTime,jdbcType=TIMESTAMP})
      </foreach>
  </insert>
  
   <select id="getEggSellsReportByDay" resultType="java.util.HashMap" >
		SELECT good_sale_weight, IFNULL(round(good_sale_money/(good_sale_weight*2) ,2),0) as good_price_value,sell_date ,good_price_type
		FROM s_b_egg_sells  WHERE farm_id = #{farmId,jdbcType=INTEGER} 
		AND farm_breed_id = #{farmBreedId,jdbcType=INTEGER}
		and sell_date &lt;= #{beginDate,jdbcType=DATE}
		and sell_date &gt;= #{endDate,jdbcType=DATE}
		ORDER BY sell_date;
  </select>
  <!-- AVG( CASE WHEN sell_date <= CURDATE() THEN good_price_value ELSE NULL END) AS weekPrice -->
  <select id="getEggSellsReportByWeek" resultType="java.util.HashMap" >

	SELECT SUM(good_sale_weight) AS weekWeight,IFNULL(ROUND(SUM(good_sale_money)/SUM(good_sale_weight*2),2),0) AS weekPrice,b.weekNum ,sell_date,good_price_type 
	FROM s_b_egg_sells a,(SELECT week_age AS weekNum,farm_id,farm_breed_id FROM s_b_egg_sells WHERE farm_id = #{farmId,jdbcType=INTEGER}
	AND farm_breed_id = #{farmBreedId,jdbcType=INTEGER} AND week_age IS NOT NULL GROUP  BY week_age,farm_id,farm_breed_id ) b
	WHERE a.farm_id = b.farm_id  AND a.farm_breed_id = b.farm_breed_id 
	AND a.week_age = b.weekNum GROUP BY a.week_age ORDER BY a.week_age ;

  </select>
  
   <select id="getChickenEggs" resultType="java.util.HashMap" >
		SELECT  week_age AS agw , house_id ,  s_f_getHouseName(house_id) AS HouseName , 
 ROUND(MAX(acc_lay_num)/hb.place_num, 1) AS layrate 
  FROM s_b_layer_breed_detail AS bd LEFT JOIN s_b_layer_house_breed AS hb ON bd.`house_breed_id` = hb.`id` 
   WHERE  hb.`farm_breed_id`= #{farmBreedId,jdbcType=INTEGER}  AND hb.farm_id = #{farmId,jdbcType=INTEGER} 
   AND  growth_date &lt;= CURDATE()  GROUP BY week_age , house_id 
   UNION ALL 
    SELECT  a.agws AS agw , IFNULL(NULL, '01') AS house_id, 
     IFNULL(NULL,'全场平均') AS HouseName , ROUND(AVG(a.layrate), 1) AS layrate FROM (
   SELECT  week_age AS agws  , house_id ,  s_f_getHouseName(house_id) AS HouseName , 
 ROUND(MAX(acc_lay_num)/hb.place_num, 1) AS layrate 
  FROM s_b_layer_breed_detail AS bd LEFT JOIN s_b_layer_house_breed AS hb ON bd.`house_breed_id` = hb.`id` 
   WHERE  hb.`farm_breed_id`= #{farmBreedId,jdbcType=INTEGER}  AND hb.farm_id = #{farmId,jdbcType=INTEGER}  
   AND  growth_date &lt;= CURDATE() GROUP BY week_age , house_id ) a GROUP BY a.agws

  </select>
  
  <!-- 只鸡产蛋比周龄 -->
     <select id="getChickenEggsByWeek" resultType="java.util.HashMap" >
		SELECT  week_age AS agw , house_id ,  s_f_getHouseName(house_id) AS HouseName , 
 ROUND(MAX(acc_lay_num)/hb.place_num, 1) AS layrate 
  FROM s_b_layer_breed_detail AS bd LEFT JOIN s_b_layer_house_breed AS hb ON bd.`house_breed_id` = hb.`id` 
   WHERE  hb.`farm_breed_id`= #{farmBreedId,jdbcType=INTEGER}  AND hb.farm_id = #{farmId,jdbcType=INTEGER} 
   AND  growth_date &lt;= CURDATE()  GROUP BY week_age , house_id 
   UNION ALL 
    SELECT  a.agws AS agw , IFNULL(NULL, '01') AS house_id, 
     IFNULL(NULL,'全场平均') AS HouseName , ROUND(AVG(a.layrate), 1) AS layrate FROM (
   SELECT  week_age AS agws  , house_id ,  s_f_getHouseName(house_id) AS HouseName , 
 ROUND(MAX(acc_lay_num)/hb.place_num, 1) AS layrate 
  FROM s_b_layer_breed_detail AS bd LEFT JOIN s_b_layer_house_breed AS hb ON bd.`house_breed_id` = hb.`id` 
   WHERE  hb.`farm_breed_id`= #{farmBreedId,jdbcType=INTEGER}  AND hb.farm_id = #{farmId,jdbcType=INTEGER}  
   AND  growth_date &lt;= CURDATE() GROUP BY week_age , house_id ) a GROUP BY a.agws ORDER BY house_id , agw

  </select>
  
   <!-- 只鸡产蛋比日龄 -->
  <select id="getChickenEggsByDay" resultType="java.util.HashMap" >
		SELECT growth_date, day_age AS agw , house_id ,  s_f_getHouseName(house_id) AS HouseName , 
 ROUND((acc_lay_num)/hb.place_num, 1) AS layrate 
  FROM s_b_layer_breed_detail AS bd LEFT JOIN s_b_layer_house_breed AS hb ON bd.`house_breed_id` = hb.`id` 
   WHERE  hb.`farm_breed_id`= #{farmBreedId,jdbcType=INTEGER}  AND hb.farm_id = #{farmId,jdbcType=INTEGER}  
    AND  growth_date > DATE_SUB(CURDATE(),INTERVAL 60 DAY) 
   AND  growth_date &lt;= CURDATE()  GROUP BY growth_date , house_id 
   UNION ALL 
    SELECT  a.growth_date  , a.agw, IFNULL(NULL, '01') AS house_id, 
     IFNULL(NULL,'全场平均') AS HouseName , ROUND(AVG(a.layrate), 1) AS layrate FROM (
  SELECT growth_date, day_age AS agw , house_id ,  s_f_getHouseName(house_id) AS HouseName , 
 ROUND((acc_lay_num)/hb.place_num, 1) AS layrate 
  FROM s_b_layer_breed_detail AS bd LEFT JOIN s_b_layer_house_breed AS hb ON bd.`house_breed_id` = hb.`id` 
   WHERE  hb.`farm_breed_id`= #{farmBreedId,jdbcType=INTEGER}  AND hb.farm_id = #{farmId,jdbcType=INTEGER}  
    AND  growth_date > DATE_SUB(CURDATE(),INTERVAL 60 DAY) 
   AND  growth_date &lt;= CURDATE()  GROUP BY growth_date , house_id  ) a GROUP BY a.growth_date ORDER BY house_id , agw

  </select>
  
  <!-- 水料比周龄 -->
     <select id="getWaterFeedByWeek" resultType="java.util.HashMap" >
      SELECT  week_age AS agw , house_id ,  s_f_getHouseName(house_id) AS HouseName , 
 ROUND((SUM(cur_water*1000)/SUM(cur_feed)), 2) AS layrate 
  FROM s_b_layer_breed_detail AS bd LEFT JOIN s_b_layer_house_breed AS hb ON bd.`house_breed_id` = hb.`id` 
   WHERE  hb.`farm_breed_id`= #{farmBreedId,jdbcType=INTEGER}  AND hb.farm_id = #{farmId,jdbcType=INTEGER}
   AND  growth_date  &lt;= CURDATE()  GROUP BY week_age , house_id 
   UNION ALL 
    SELECT a.agws AS agw , IFNULL(NULL, '01') AS house_id, 
     IFNULL(NULL,'全场平均') AS HouseName , ROUND(AVG(a.layrate), 2) AS layrate FROM (
   SELECT  week_age AS agws  , house_id ,  s_f_getHouseName(house_id) AS HouseName , 
 ROUND((SUM(cur_water*1000)/SUM(cur_feed)), 2) AS layrate 
  FROM s_b_layer_breed_detail AS bd LEFT JOIN s_b_layer_house_breed AS hb ON bd.`house_breed_id` = hb.`id` 
   WHERE  hb.`farm_breed_id`= #{farmBreedId,jdbcType=INTEGER}  AND hb.farm_id = #{farmId,jdbcType=INTEGER}
   AND  growth_date  &lt;= CURDATE() GROUP BY week_age , house_id ) a GROUP BY a.agws  ORDER BY  house_id ,agw

  </select>
  
   <!-- 水料比日龄 -->
  <select id="getWaterFeedByDay" resultType="java.util.HashMap" >
   
SELECT  day_age AS agw , house_id ,  s_f_getHouseName(house_id) AS HouseName , 
 ROUND((cur_water*1000)/cur_feed, 2) AS layrate 
  FROM s_b_layer_breed_detail AS bd LEFT JOIN s_b_layer_house_breed AS hb ON bd.`house_breed_id` = hb.`id` 
   WHERE  hb.`farm_breed_id`= #{farmBreedId,jdbcType=INTEGER}  AND hb.farm_id = #{farmId,jdbcType=INTEGER}
    AND  growth_date > DATE_SUB(CURDATE(),INTERVAL 60 DAY) 
   AND  growth_date &lt;= CURDATE()  GROUP BY growth_date , house_id 
   UNION ALL 
    SELECT   a.day_age AS agw, IFNULL(NULL, '01') AS house_id, 
     IFNULL(NULL,'全场平均') AS HouseName , ROUND(AVG(a.layrate), 2) AS layrate FROM (
  SELECT day_age  , house_id ,  s_f_getHouseName(house_id) AS HouseName , 
 ROUND((cur_water*1000)/cur_feed, 2) AS layrate 
  FROM s_b_layer_breed_detail AS bd LEFT JOIN s_b_layer_house_breed AS hb ON bd.`house_breed_id` = hb.`id` 
   WHERE  hb.`farm_breed_id`= #{farmBreedId,jdbcType=INTEGER}  AND hb.farm_id = #{farmId,jdbcType=INTEGER}
    AND  growth_date > DATE_SUB(CURDATE(),INTERVAL 60 DAY) 
   AND  growth_date &lt;= CURDATE()  GROUP BY growth_date , house_id  ) a GROUP BY a.day_age 
    ORDER BY  house_id ,agw
   
  </select>
  
</mapper>